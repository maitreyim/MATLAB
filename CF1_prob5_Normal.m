 %Problem 5: Generation of Normal Distribution using Box-Muller and
 %Polar-Marsagalia Algorithms
% Part A:Generate Uniformly Distributed Random Numbers using LGM Algorithm
n = 10000;%number asked for in the question
x = nan(n, 1);% pre allocating memory space for x's
u = nan(n, 1);% pre allocating memory space for u's
x(1) = 10; % seed/staring number for x's
m = 2^31 - 1;%standard m for LGM algorithm
b=0;%standard b for LGM algorithm
a= 7^5; % standard a in LGM algorithm
for i=1:n
x(i+1) = mod((a*x(i)),m);
%Generate U(i)
u(i+1)= x(i+1)/m;
end
u = reshape(u(2:end), n/2,2);
tic
% Generation of Normal Distribution using BOX MULLER Algorithm
n1= 5000;
z = nan(n1/2, 2);
for i = 1:(n1/2)
  z(i, 1) = sqrt(-2*log(u(i,1)))*cos(2*pi*u(i,2));
  z(i, 2) = sqrt(-2*log(u(i,1)))*sin(2*pi*u(i,2));
  
end
toc
z = reshape(z, n1, 1);
mean(z);
std(z);
skewness(z);
kurtosis(z);
%Jerque-Bera test
jbtest(z);%is a two-sided goodness-of-fit test suitable when a 
%fully-specified null distribution is unknown and its parameters must be 
%estimated.The test statistic is:(sample size/6)(s^2+((k-3)^2)/4)
figure(1)
j=20;%Number of bins
hist(z,j)
xlabel('Bin')
ylabel('Frequency')
Title('Histogram of Normally Distributed random Numbers generated by Box-Muller','fontsize',12)
figure(2)
x = sort(z);
y = 1/sqrt(2*pi)*exp(-x.^2/2);% Standard Normal Density Formula
plot(x,y)% To Check how it look likes and compare it with question 6b.
Title('Normal Density Curve Using Box-Muller','Fontsize',12)
% Generation of Normal Distribution using POLAR MARSAGLIA Algorithm
tic
z = [];
i = 1;
while( size(z,1) < n1/2)
  
  v1 = 2*u(i,1) - 1;
  v2 = 2*u(i,2) - 1;
  W  = v1^2 + v2^2;

  if(W <= 1)
    z = [z; v1*sqrt(-2*log(W)/W), v2*sqrt(-2*log(W)/W)];
  end
  i = i + 1;
end
  toc
z = reshape(z, numel(z), 1);
mean(z);
std(z);
skewness(z);
kurtosis(z);
%Jerque-Bera test
jbtest(z);%is a two-sided goodness-of-fit test suitable when a 
%fully-specified null distribution is unknown and its parameters must be 
%estimated.The test statistic is:(sample size/6)(s^2+((k-3)^2)/4)
figure(3)
j=20;% of bins
hist(z,j)
xlabel('Bin')
ylabel('Frequency')
Title('Histogram of Normally Distributed random Numbers generated by Polar-Marsagalia','fontsize',12)
figure(4)
x = sort(z);
y = 1/sqrt(2*pi)*exp(-x.^2/2);% Standard Normal Density Formula
plot(x,y)% To Check how it look likes and compare it with question 6b.
Title('Normal Density Curve Using Polar-Marsagalia','Fontsize',12)
















